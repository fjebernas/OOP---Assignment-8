<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>